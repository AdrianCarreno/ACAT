name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  install-deps:
    runs-on: ubuntu-latest
    container:
      image: python:3.10
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pip install poetry
      - name: Configure Poetry
        run: poetry config virtualenvs.create false
      - name: Set up Poetry cache
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin
            /usr/local/lib/python3.10/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies using Poetry
        run: poetry install --with dev,test

  lint:
    needs: install-deps
    runs-on: ubuntu-latest
    container:
      image: python:3.10
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Restore Poetry cache
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin
            /usr/local/lib/python3.10/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Lint code
        run: ruff check .
      - name: Check formatting
        run: ruff format --check .

  test:
    needs: install-deps
    runs-on: ubuntu-latest
    container:
      image: python:3.10
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Restore Poetry cache
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin
            /usr/local/lib/python3.10/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Run tests and generate coverage report
        run: pytest --cov
